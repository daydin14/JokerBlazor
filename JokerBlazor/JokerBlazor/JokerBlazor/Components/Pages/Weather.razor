@page "/weather"
@attribute [StreamRendering]

<PageTitle>Weather</PageTitle>

<MudContainer>
    <MudPaper Height="80vh" Style="display: flex; flex-direction: column; justify-content: flex-start; align-items: center; margin-top: 35px;">
        <MudText Typo="Typo.h1" Align="Align.Center">Weather</MudText>
        <br />
        <MudText>This component demonstrates showing data.</MudText>
        @if (forecasts == null)
        {
            <MudText><em>Loading...</em></MudText>
        }
        else
        {
            <MudTable Items="@forecasts" Style="width: 800px;">
                <HeaderContent>
                    <MudTh>Date</MudTh>
                    <MudTh>Temp. (C)</MudTh>
                    <MudTh>Temp. (F)</MudTh>
                    <MudTh>Summary</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>@context.Date.ToShortDateString()</MudTd>
                    <MudTd>@context.TemperatureC</MudTd>
                    <MudTd>@context.TemperatureF</MudTd>
                    <MudTd>@context.Summary</MudTd>
                </RowTemplate>
            </MudTable>
        }
    </MudPaper>
</MudContainer>
@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        await Task.Delay(500);

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };
        forecasts = Enumerable.Range(1, 5).Select(index => new WeatherForecast
            {
                Date = startDate.AddDays(index),
                TemperatureC = Random.Shared.Next(-20, 55),
                Summary = summaries[Random.Shared.Next(summaries.Length)]
            }).ToArray();
    }

    private class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
