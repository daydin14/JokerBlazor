@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="DrawerToggle" />
        <MudSpacer />
        <MudButton OnClick="() => OnThemeChanged(new ChangeEventArgs { Value = !_isDarkMode })">@_label</MudButton>
        <MudSwitch @bind-Value="_isDarkMode" Color="Color.Primary" Class="ma-4" T="bool" Label="Toggle Theme" @onchange="OnThemeChanged" />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h5" Class="mt-1">Joker's Manor</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {

    // Side Panel Drawer Toggle
    private bool _drawerOpen = true;
    private void DrawerToggle() => _drawerOpen = !_drawerOpen;

    // Light/Dark Mode Toggle
    private string _label = string.Empty;
    private bool _isDarkMode = false;
    private MudThemeProvider? _mudThemeProvider;

    protected override void OnInitialized()
    {
        _label = _isDarkMode ? "Dark Mode" : "Light Mode";
    }

    private void OnThemeChanged(ChangeEventArgs e)
    {
        try
        {
            Serilog.Log.Information("OnThemeChanged called with value: {value}", e.Value);
            _isDarkMode = (bool)e.Value!;
            _label = _isDarkMode ? "Dark Mode" : "Light Mode";
            Serilog.Log.Information("Updated label: {label}", _label);
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Serilog.Log.Error(ex, "An error occurred in OnThemeChanged");
        }
    }
}